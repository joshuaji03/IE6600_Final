update.packages("rlang")
# echo=T to show the code, eval=T to show the results ----
knitr::opts_chunk$set(echo = T, eval=T)
# Pre-load packages ----
library(tidyverse)
update.packages("rlang")
df_5 <- read_csv('Data/Morticd10_part5.csv')
df_1 <- read_csv('Data/Morticd10_part1.csv')
df_2 <- read_csv('Data/Morticd10_part2.csv')
df_3 <- read_csv('Data/Morticd10_part3.csv')
df_4 <- read_csv('Data/Morticd10_part4.csv')
df_5 <- read_csv('Data/Morticd10_part5.csv')
df <- rbind(df_1, df_2, df_3, df_4, df_5)
pop <- read.table(file, header = TRUE, sep = ",", dec = ".")
file <- "country_codes"
pop <- read.table(file, header = TRUE, sep = ",", dec = ".")
View(pop)
pop <- read.table(file, header = TRUE, sep = ",", dec = "")
pop <- read.table(file, header = TRUE, sep = ",", dec = ".")
?read_file
pop <- read.table(file, header = TRUE, sep = ",")
pop <- read.table(file, header = TRUE, sep = ",")
pop <- read.table(file, header = TRUE, sep = ",")
file <- "Data/country_codes.csv"
pop <- read.table(file, header = TRUE, sep = ",")
View(pop)
unlist(strsplit(pop,","))
within(pop, country.name<-data.frame(do.call('rbind', strsplit(as.character(country.name), ',', fixed=TRUE))))
View(pop)
pop <- within(pop, country.name<-data.frame(do.call('rbind', strsplit(as.character(country.name), ',', fixed=TRUE))))
country <- subset(pop,select = -c(country.name.X3))
colnames(pop)
colnames(pop) <- c('code','country_name','C3')
pop <- read.table(file, header = TRUE, sep = ",")
View(pop)
pop <- read.table(file, header = TRUE, sep = ",")
View(pop)
separate(data = pop, col = country.name, into = c("code", "country_name"), sep = "\\,")
country <- separate(data = pop, col = country.name, into = c("code", "country_name"), sep = "\\,")
View(country)
file <- "Data/pop.csv"
pop <- read.table(file, header = TRUE, sep = ",")
pop <- read.table(file, header = TRUE, sep = "\\,")
pop <- read.table(file, header = TRUE, sep = ", ")
pop <- read.table(file, header = TRUE, sep = ",")
View(pop)
pop <- read.table(file, header = TRUE, sep = ",")
pop <- read.table(file, header = FALSE, sep = ",")
View(pop)
pop <- read.table(file, header = TRUE, sep = ",")
View(pop)
pop <- read.table(file, header = TRUE, sep = ".")
View(pop)
pop <- read.table(file, header = TRUE, sep = "")
pop <- read.table(file, header = TRUE, sep = " ")
pop <- read.table(file, header = TRUE, sep = "..")
pop <- read.table(file, header = TRUE, sep = ", ")
pop <- read.table(file, header = TRUE, sep = ",")
nameLine <- readLines(con=file, n=1)
nameLine
unlist(strsplit(nameLine,","))
pop <- separate(data = pop, col = country.name,
into = nameLine, sep = "\\,")
colnames(pop)
pop <- separate(data = pop, col = Country.Admin1.SubDiv.Year.Sex.Frmat.Pop1.Pop2.Pop3.Pop4.Pop5.Pop6.Pop7.Pop8.Pop9.Pop10.Pop11.Pop12.Pop13.Pop14.Pop15.Pop16.Pop17.Pop18.Pop19.Pop20.Pop21.Pop22.Pop23.Pop24.Pop25.Pop26.Lb,
into = nameLine, sep = "\\,")
View(pop)
pop <- read.table(file, header = TRUE, sep = ",")
nameLine
nameLine <- unlist(strsplit(nameLine,","))
pop <- read.table(file, header = TRUE, sep = ",")
pop <- separate(data = pop, col = "Country.Admin1.SubDiv.Year.Sex.Frmat.Pop1.Pop2.Pop3.Pop4.Pop5.Pop6.Pop7.Pop8.Pop9.Pop10.Pop11.Pop12.Pop13.Pop14.Pop15.Pop16.Pop17.Pop18.Pop19.Pop20.Pop21.Pop22.Pop23.Pop24.Pop25.Pop26.Lb",
into = nameLine, sep = "\\,")
View(pop)
colnames(pop)
pop %>%
rename("\"Country" = Country,
"Lb\"" = Lb)
make.names(nameLine, unique=TRUE)
nameLine <- readLines(con=file, n=1)
nameLine <- make.names(unlist(strsplit(nameLine,",")))
pop <- read.table(file, header = TRUE, sep = ",")
pop <- separate(data = pop, col = "Country.Admin1.SubDiv.Year.Sex.Frmat.Pop1.
Pop2.Pop3.Pop4.Pop5.Pop6.Pop7.Pop8.Pop9.Pop10.Pop11.Pop12.Pop13.
Pop14.Pop15.Pop16.Pop17.Pop18.Pop19.Pop20.Pop21.Pop22.Pop23.Pop24.
Pop25.Pop26.Lb", into = nameLine, sep = "\\,")
file <- "Data/pop.csv"
nameLine <- readLines(con=file, n=1)
nameLine <- make.names(unlist(strsplit(nameLine,",")))
pop <- read.table(file, header = TRUE, sep = ",")
pop <- separate(data = pop, col = "Country.Admin1.SubDiv.Year.Sex.Frmat.Pop1.
Pop2.Pop3.Pop4.Pop5.Pop6.Pop7.Pop8.Pop9.Pop10.Pop11.Pop12.Pop13.
Pop14.Pop15.Pop16.Pop17.Pop18.Pop19.Pop20.Pop21.Pop22.Pop23.Pop24.
Pop25.Pop26.Lb", into = nameLine, sep = "\\,")
pop <- separate(data = pop, col = "Country.Admin1.SubDiv.Year.Sex.Frmat.Pop1.Pop2.Pop3.Pop4.Pop5.Pop6.Pop7.Pop8.Pop9.Pop10.Pop11.Pop12.Pop13.Pop14.Pop15.Pop16.Pop17.Pop18.Pop9.Pop20.Pop21.Pop22.Pop23.Pop24.Pop25.Pop26.Lb",
into = nameLine, sep = "\\,")
colnames(pop)
pop <- separate(data = pop, col = "Country.Admin1.SubDiv.Year.Sex.Frmat.Pop1.Pop2.Pop3.Pop4.Pop5.Pop6.Pop7.Pop8.Pop9.Pop10.Pop11.Pop12.Pop13.Pop14.Pop15.Pop16.Pop17.Pop18.Pop19.Pop20.Pop21.Pop22.Pop23.Pop24.Pop25.Pop26.Lb",
into = nameLine, sep = "\\,")
View(pop)
file <- "Data/pop.csv"
nameLine <- readLines(con=file, n=1)
nameLine <- make.names(unlist(strsplit(nameLine,",")))
pop <- read.table(file, header = TRUE, sep = ",")
pop <- separate(data = pop, col = colnames(pop),
into = nameLine, sep = "\\,")
colnames(pop)
pop %>%
rename(X.Country = Country,
Lb. = Lb)
pop %>%
rename(Country = X.Country,
Lb = Lb.)
notes <- read.csv(file, header = TRUE, sep = ",")
# upload Population and live births data (see documentation about more details)
file <- "notes.csv"
notes <- read.csv(file, header = TRUE, sep = ",")
nameLine <- readLines(con=file, n=1)
nameLine <- make.names(unlist(strsplit(nameLine,",")))
notes <- separate(data = notes, col = colnames(pop),
into = nameLine, sep = "\\,")
notes <- separate(data = notes, col = colnames(notes),
into = nameLine, sep = "\\,")
View(notes)
write.csv(notes,"notes.csv", row.names = FALSE)
library(shiny)
ui <- fluidPage()
server <- function(input, out) {
}
shinyApp(ui=ui, server=server)
runApp('Desktop/Northeastern/IE 6600/MyFirstApp.R')
# echo=T to show the code, eval=T to show the results ----
knitr::opts_chunk$set(echo = T, eval=T)
# Pre-load packages ----
library(tidyverse)
# install.packages("sqldf") run once
library(sqldf)
# upload morality data
df_1 <- read_csv('Data/Morticd10_part1.csv')
df_2 <- read_csv('Data/Morticd10_part2.csv')
df_3 <- read_csv('Data/Morticd10_part3.csv')
df_4 <- read_csv('Data/Morticd10_part4.csv')
df_5 <- read_csv('Data/Morticd10_part5.csv')
# combine all 5 morality datasets
df <- rbind(df_1, df_2, df_3, df_4, df_5)
View(df)
# upload country name with country code
file <- "Data/country_codes.csv"
country <- read.table(file, header = TRUE, sep = ",")
country <- separate(data = country, col = country.name,
into = c("code", "country_name"), sep = "\\,")
# upload Population and live births data (see documentation about more details)
file <- "Data/pop.csv"
nameLine <- readLines(con=file, n=1)
nameLine <- make.names(unlist(strsplit(nameLine,",")))
pop <- read.table(file, header = TRUE, sep = ",")
pop <- separate(data = pop, col = colnames(pop),
into = nameLine, sep = "\\,")
pop <- pop %>%
rename(Country = X.Country,
Lb = Lb.)
# check what age formats exist in the df
pop %>%
group_by(Frmat) %>%
summarise(n = n())
# read age reference table into R
file <- "Data/age_ref.csv"
age_ref <- read_csv(file)
age_ref <- head(age_ref, 10)
pop %>%
group_by(Frmat) %>%
summarise(n = n())
df %>%
group_by(List) %>%
summarise(n = n())
df %>%group_by(List) %>%
+   summarise(n = n())
df %>%
filter(List = "104")
df %>%
filter(List = "104")
df %>%
filter(List == "104")
df %>%
filter(Cause == "A259")
df %>%
filter(List == "103")
df %>%
filter(List == "101")
df %>%
group_by(c(List,Cause)) %>%
summarise(n = n())
df %>%
group_by(c(List,Cause))
df %>%
group_by(List,Cause) %>%
summarise(n = n())
temp <- df %>%
group_by(List,Cause) %>%
summarise(n = n())
View(temp)
df %>%
filter(List == "B36")
df %>%
filter(List == "B35")
df %>%
filter(Cause == "B35")
df %>%
filter(Cause == "B36")
View(temp)
# temp table that combines country name table to population table
temp <- sqldf("SELECT *
FROM country df1, pop df2
WHERE df1.code = df2.Country
")
View(temp)
shinyApp(ui, server)
library(shiny); runApp('Desktop/Northeastern/IE 6600/IE6600_Final/shinyApp.R')
runApp('Desktop/Northeastern/IE 6600/IE6600_Final/shinyApp.R')
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
ui <- fluidPage(
titlePanel("Hello Shiny!"),
sidebarLayout(
sidebarPanel(
siderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput(outputId = "distPlot")
)
)
)
View(p)
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
gc()
library(shiny)
library(tidyverse)
library(plotly)
library(DT)
library(shinyWidgets)
library(RColorBrewer)
library(leaflet)
library(rgdal)
df <- read_csv('/Users/yixuanji/Desktop/Northeastern/IE\ 6600/IE6600_Final/Data/final_df.csv')
total_d_country <- final_df %>%
group_by(country_name,Cause_Specifics, iso3) %>%
summarise(total = sum(Deaths1))
final_df.csv <- read_csv('/Users/yixuanji/Desktop/Northeastern/IE\ 6600/IE6600_Final/Data/final_df.csv')
final_df.csv <- read_csv('/Users/yixuanji/Desktop/Northeastern/IE\ 6600/IE6600_Final/Data/final_df.csv')
total_d_country <- final_df %>%
group_by(country_name,Cause_Specifics, iso3) %>%
summarise(total = sum(Deaths1))
final_df <- read_csv('/Users/yixuanji/Desktop/Northeastern/IE\ 6600/IE6600_Final/Data/final_df.csv')
final_df <- read_csv('/Users/yixuanji/Desktop/Northeastern/IE\ 6600/IE6600_Final/Data/final_df.csv')
total_d_country <- final_df %>%
group_by(country_name,Cause_Specifics, iso3) %>%
summarise(total = sum(Deaths1))
View(total_d_country)
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
map_disease("Heart failure")
map_disease <- function(caus) {
df_to_map <- filter(total_d_country, Cause_Specifics == caus)
try <- left_join(world_spdf@data, df_to_map, by = c("ISO3" = "iso3"))
try$total[is.na(try$total)] <- 0
mybins <- c(0,10000,20000,50000,100000,300000,Inf)
mypalette <- colorBin(palette="YlOrBr", domain=try$total, na.color="transparent", bins=mybins)
mytext <- paste(
"Country: ", try$NAME,"<br/>",
"Total Death: ", try$total, "<br/>") %>%
lapply(htmltools::HTML)
leaflet(world_spdf) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = ~mypalette(try$total),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend(pal=mypalette, values=try$total, opacity=0.9, title = caus, position = "bottomleft" )
}
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
runApp()
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
runApp()
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
runApp()
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
runApp()
runApp('Desktop/Northeastern/IE 6600/IE6600_Final')
world_spdf
library(shiny)
library(tidyverse)
library(plotly)
library(DT)
library(shinyWidgets)
library(RColorBrewer)
library(leaflet)
library(rgdal)
map_tiles <- "/world_shape_file/"
world_spdf <- readOGR(
dsn= paste0(getwd(),map_tiles),
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf <- readOGR(
dsn= paste0(getwd(),map_tiles),
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
setwd("~/Desktop/Northeastern/IE 6600/IE6600_Final")
runApp()
df_to_map <- filter(total_d_country, Cause_Specifics == caus)
caus <- "Heart Failure"
df_to_map <- filter(total_d_country, Cause_Specifics == caus)
caus <- Heart failure
caus <- "Heart failure"
df_to_map <- filter(total_d_country, Cause_Specifics == caus)
View(df_to_map)
total_d_country <- final_df %>%
group_by(country_name,Cause_Specifics, iso3) %>%
summarise(total = sum(Deaths1))
View(total_d_country)
View(final_df)
# echo=T to show the code, eval=T to show the results ----
knitr::opts_chunk$set(echo = T, eval=T)
# Pre-load packages ----
library(tidyverse)
library(sqldf)
final_df<- final_df[!(final_df$country_name=="Rodrigues"),]
View(final_df)
View(final_df)
runApp()
runApp()
